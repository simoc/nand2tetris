// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	Not(in=address[14], out=accessRam);
	And(a=accessRam, b=load, out=loadRam);
	Fill16x(in=accessRam, out=ramMask);

	Not(in=address[13], out=not13);
	And(a=not13, b=address[14], out=accessScreen);
	And(a=accessScreen, b=load, out=loadScreen);
	Fill16x(in=accessScreen, out=screenMask);

	And(a=address[13], b=address[14], out=accessKeyboard);
	Fill16x(in=accessKeyboard, out=keyboardMask);

	RAM16K(in=in, load=loadRam, address=address[0..13], out=ramBus);
	Screen(in=in, load=loadScreen, address=address[0..12], out=screenBus);
	Keyboard(out=keyboardBus);

	And16(a=keyboardBus, b=keyboardMask, out=bus1);
	And16(a=screenBus, b=screenMask, out=bus2);
	And16(a=ramBus, b=ramMask, out=bus3);

	Or16(a=bus1, b=bus2, out=bus4);
	Or16(a=bus3, b=bus4, out=out);
}
