/**
 * A basic math library.
 */
class Math
{
    /** Initializes the library. */
    function void init()
	{
		return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x)
	{
		if (x < 0)
		{
			let x = -x;
		}
		return x;
    }

	function int multiplyRecursive(int x, int y, int n, int power2, int xAccumulator)
	{
		var int total;

		let total = 0;
		if (~((y & power2) = 0))
		{
			/*
			 * If bit N is set in y, then add x*(2^N).
			 */
			let total = xAccumulator;
		}

		/*
		 * Add all higher powers of 2 too.
		 */
		if (n < 15)
		{
			let total = total + Math.multiplyRecursive(x, y, n + 1, power2 + power2, xAccumulator + xAccumulator);
		}
		return total;
	}

    /** Returns the product of x and y. */
    function int multiply(int x, int y)
	{
		return Math.multiplyRecursive(x, y, 0, 1, x);
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y)
	{
		var int counter;
		var int ax;
		var int ay;
		var int ay16;

		let ax = Math.abs(x);
		let ay = Math.abs(y);
		let counter = 0;
		if (ay > 0)
		{
			while (~(ax < ay))
			{
				// TODO implement long division algorithm

				let ax = ax - ay;
				let counter = counter + 1;
			}
		}

		if (((x > 0) & (y < 0)) | ((x < 0) & (y > 0)))
		{
			let counter = -counter;
		}
		return counter;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x)
	{
		var int lower;
		var int upper;
		var int mid;
		var int sqMid;

		let lower = 0;
		let upper = 182; /* 181 * 181 = 32761 is largest possible result */

		if (x > 0)
		{
			while (true)
			{
				let mid = (lower + upper) / 2;
				let sqMid = mid * mid;
				if (sqMid < x)
				{
					let lower = mid;
				}
				else
				{
					if (sqMid = x)
					{
						return mid;
					}
					else
					{
						let upper = mid;
					}
				}
				if ((lower + 1) = upper)
				{
					/*
					 * Lower value squared is less than x.
					 * Upper value squared is greater than x.
					 * So return lower value.
					 */
					return lower;
				}
			}
		}
		return 0;
    }

    /** Returns the greater number. */
    function int max(int a, int b)
	{
		if (a > b)
		{
			return a;
		}
		return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b)
	{
		if (a < b)
		{
			return a;
		}
		return b;
    }
}
